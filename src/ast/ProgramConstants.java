/* Generated By:JJTree&JavaCC: Do not edit this line. ProgramConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProgramConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ABSTRACT = 8;
  /** RegularExpression Id. */
  int BOOLEAN = 9;
  /** RegularExpression Id. */
  int INSTANCE_INIT = 10;
  /** RegularExpression Id. */
  int BREAK = 11;
  /** RegularExpression Id. */
  int BYTE = 12;
  /** RegularExpression Id. */
  int CASE = 13;
  /** RegularExpression Id. */
  int CATCH = 14;
  /** RegularExpression Id. */
  int CHAR = 15;
  /** RegularExpression Id. */
  int CLASS = 16;
  /** RegularExpression Id. */
  int CONST = 17;
  /** RegularExpression Id. */
  int CONTINUE = 18;
  /** RegularExpression Id. */
  int _DEFAULT = 19;
  /** RegularExpression Id. */
  int DO = 20;
  /** RegularExpression Id. */
  int DOUBLE = 21;
  /** RegularExpression Id. */
  int ELSE = 22;
  /** RegularExpression Id. */
  int EXTENDS = 23;
  /** RegularExpression Id. */
  int FALSE = 24;
  /** RegularExpression Id. */
  int FINAL = 25;
  /** RegularExpression Id. */
  int FINALLY = 26;
  /** RegularExpression Id. */
  int FLOAT = 27;
  /** RegularExpression Id. */
  int FOR = 28;
  /** RegularExpression Id. */
  int GOTO = 29;
  /** RegularExpression Id. */
  int IF = 30;
  /** RegularExpression Id. */
  int IFELSE = 31;
  /** RegularExpression Id. */
  int IMPLEMENTS = 32;
  /** RegularExpression Id. */
  int IMPORT = 33;
  /** RegularExpression Id. */
  int INSTANCEOF = 34;
  /** RegularExpression Id. */
  int INT = 35;
  /** RegularExpression Id. */
  int INTERFACE = 36;
  /** RegularExpression Id. */
  int LONG = 37;
  /** RegularExpression Id. */
  int NATIVE = 38;
  /** RegularExpression Id. */
  int NEW = 39;
  /** RegularExpression Id. */
  int NULL = 40;
  /** RegularExpression Id. */
  int PACKAGE = 41;
  /** RegularExpression Id. */
  int PRIVATE = 42;
  /** RegularExpression Id. */
  int PROTECTED = 43;
  /** RegularExpression Id. */
  int PUBLIC = 44;
  /** RegularExpression Id. */
  int RETURN = 45;
  /** RegularExpression Id. */
  int SHORT = 46;
  /** RegularExpression Id. */
  int STATIC = 47;
  /** RegularExpression Id. */
  int SUPER = 48;
  /** RegularExpression Id. */
  int SWITCH = 49;
  /** RegularExpression Id. */
  int SYNCHRONIZED = 50;
  /** RegularExpression Id. */
  int THIS = 51;
  /** RegularExpression Id. */
  int THROW = 52;
  /** RegularExpression Id. */
  int THROWS = 53;
  /** RegularExpression Id. */
  int TRANSIENT = 54;
  /** RegularExpression Id. */
  int TRUE = 55;
  /** RegularExpression Id. */
  int TRY = 56;
  /** RegularExpression Id. */
  int VOID = 57;
  /** RegularExpression Id. */
  int VOLATILE = 58;
  /** RegularExpression Id. */
  int WHILE = 59;
  /** RegularExpression Id. */
  int STRICTFP = 60;
  /** RegularExpression Id. */
  int LBRACKET = 61;
  /** RegularExpression Id. */
  int RBRACKET = 62;
  /** RegularExpression Id. */
  int COMMA = 63;
  /** RegularExpression Id. */
  int LPAREN = 64;
  /** RegularExpression Id. */
  int RPAREN = 65;
  /** RegularExpression Id. */
  int LBRACE = 66;
  /** RegularExpression Id. */
  int RBRACE = 67;
  /** RegularExpression Id. */
  int SEMICOLON = 68;
  /** RegularExpression Id. */
  int DOT = 69;
  /** RegularExpression Id. */
  int STRING = 70;
  /** RegularExpression Id. */
  int ID = 71;
  /** RegularExpression Id. */
  int DIGIT = 72;
  /** RegularExpression Id. */
  int REAL = 73;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"//\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"abstract\"",
    "\"boolean\"",
    "\"instance_init\"",
    "\"break\"",
    "\"byte\"",
    "\"case\"",
    "\"catch\"",
    "\"char\"",
    "\"class\"",
    "\"const\"",
    "\"continue\"",
    "\"default\"",
    "\"do\"",
    "\"double\"",
    "\"else\"",
    "\"extends\"",
    "\"false\"",
    "\"final\"",
    "\"finally\"",
    "\"float\"",
    "\"for\"",
    "\"goto\"",
    "\"if\"",
    "\"ifelse\"",
    "\"implements\"",
    "\"import\"",
    "\"instanceof\"",
    "\"int\"",
    "\"interface\"",
    "\"long\"",
    "\"native\"",
    "\"new\"",
    "\"null\"",
    "\"package\"",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"return\"",
    "\"short\"",
    "\"static\"",
    "\"super\"",
    "\"switch\"",
    "\"synchronized\"",
    "\"this\"",
    "\"throw\"",
    "\"throws\"",
    "\"transient\"",
    "\"true\"",
    "\"try\"",
    "\"void\"",
    "\"volatile\"",
    "\"while\"",
    "\"strictfp\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\".\"",
    "<STRING>",
    "<ID>",
    "<DIGIT>",
    "<REAL>",
    "\"?\"",
    "\":\"",
    "\"||\"",
    "\"&&\"",
    "\"|\"",
    "\"^\"",
    "\"&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"~\"",
    "\"!\"",
    "\"++\"",
    "\"--\"",
  };

}
